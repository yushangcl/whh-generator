package ${voPackage};

import com.fasterxml.jackson.annotation.JsonFormat;
import ${commonPackage}.util.DateUtil;
import ${beanPackage}.${tableInfo.beanName};
import lombok.Data;
import lombok.EqualsAndHashCode;
import org.apache.commons.collections4.CollectionUtils;
import org.springframework.beans.BeanUtils;
import org.springframework.format.annotation.DateTimeFormat;

import java.util.Date;
import java.util.List;
import java.util.stream.Collectors;

/**
 * ${tableInfo.beanName}Vo
 *
 * @author ${authorName} (;￢＿￢) 
 * @version ${version}
 * @date $date
 **/
@EqualsAndHashCode(callSuper = true)
@Data
public class ${tableInfo.beanName}Vo extends ${tableInfo.beanName} {
    /**
     * 显示创建时间
     **/
    private String createTimeDesc;

    /**
     * 显示更新时间
     **/
    private String updateTimeDesc;

    /**
     * 显示创建人
     **/
    private String createUserDesc;

    /**
     * 显示更新人
     **/
    private String updateUserDesc;
#foreach($field in ${tableInfo.tableFields})
    #if(${field.filed} == "status")

    /**
    * 显示状态
    **/
    private String statusDesc;
    #end
    #if(${field.filed} == "type")

    /**
    * 显示类型
    **/
    private String typeDesc;
    #end
    #if(${field.filed} == "skuId")

    /**
    * sku编码
    **/
    private String skuCode;

    /**
    * sku名称
    **/
    private String skuName;

    /**
    * sku单位
    **/
    private String unitName;
    #end
    #if(${field.filed} == "warehouseId")

    /**
    * 客户名称
    **/
    private String warehouseName;
    #end
    #if(${field.filed} == "customerId")

    /**
    * 客户名称
    **/
    private String customerName;
    #end
#end

    /**
     * 开始时间
     */
    @DateTimeFormat(pattern = "yyyy-MM-dd HH:mm:ss")
    @JsonFormat(timezone = "GMT+8", pattern = "yyyy-MM-dd HH:mm:ss")
    private Date startTime;

    /**
     * 结束时间
     */
    @DateTimeFormat(pattern = "yyyy-MM-dd HH:mm:ss")
    @JsonFormat(timezone = "GMT+8", pattern = "yyyy-MM-dd HH:mm:ss")
    private Date endTime;


    public ${tableInfo.beanName}Vo() {
    }

    public ${tableInfo.beanName}Vo(${tableInfo.beanName} pojo) {
        if (null != pojo) {
            BeanUtils.copyProperties(pojo, this);
            this.setCreateTimeDesc(DateUtil.format(pojo.getCreateTime(), DateUtil.YYMMDD));
            this.setUpdateTimeDesc(DateUtil.format(pojo.getUpdateTime(), DateUtil.YYMMDD));
        }
    }

    public static List<${tableInfo.beanName}Vo> convertVo(List<${tableInfo.beanName}> ${tableInfo.shortBeanName}s) {
        return CollectionUtils.isEmpty(${tableInfo.shortBeanName}s) ? null : ${tableInfo.shortBeanName}s.stream().map(${tableInfo.beanName}Vo::new).collect(Collectors.toList());
    }
}